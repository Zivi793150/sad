Техническое требование

1.	Библиотеки. В проекте должны использоваться следующие библиотеки: redux (rtk), router-dom, hook-form. Если вы хотите добавить в список другие библиотеки - обязательно необходимо согласовать с преподавателем

2.	Архитектура. В проекте необходимо использовать паттерн архитектуры, который обсуждался во время занятий (вынос компонентов в папку components, страниц - pages, хранилища - store, медиа (иконки, кратинки) - assets и тд). Каждый компонент должен быть представлен в виде папки с именем компонента и хранить в себе модульную стилизацию, а также сам компонент (index.jsx).  Имена компонентов должны четко определять их назначения. Используйте в нейминге постфиксы (Page, List, Item, Card и тд). Старайтесь переиспользовать существующие компоненты на разных страницах.

3.	Стилизация. В проекте очень важно также уделить объем работы стилизации. Итоговая стилизация должна быть выполнена вплоть до указанной сложности макета. Для каждого компонента необходимо сформировать модульный css файл с изолированными стилями, и общий index.css файл для стилизации шрифтов и других прочих общих стилей. 

4.	Бэкенд. Данные продуктов и категорий должны обязательно браться с указанного бекенда. Инструкция к установке и запуску находятся в файле readme.md. Важно! исходный код бэкенда менять нельзя!

В качестве ответа необходимо прислать git-репозиторий готового веб-приложения

 3 основных критериев 

1) Паттерн архитектуры кода

2) Стилизация (согласно макету)

3) Техническое оснащение приложения (и прочих механизмов в макете)